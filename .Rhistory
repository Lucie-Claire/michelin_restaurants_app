knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Fijar dierectorio de trabajo donde se encuentran funciones y datosvinoDep
setwd('F:/Documentos/Master Comercio 2021-22/Material minería de datos grupo 3 (2)/Material minería de datos grupo 3')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Fijar dierectorio de trabajo donde se encuentran funciones y datosvinoDep
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia1_MDDepuracion')
# Cargo las funciones que voy a utilizar después
source("Funciones_R.R")
# Cargo las librerias que me van a hacer falta
library(questionr)
library(corrplot)
library(caret)
library(ggplot2)
library(effectsize)
library(dplyr)
# Arboles de clasificación y regresión CART (Breiman)
paquetes(c('rpart','gridExtra'))
# Parto de los datos sin atípicos ni ausentes guardados
datos<-readRDS("F:/Documentos/Master Comercio 2021-22/Material minería de datos grupo 3 (2)/Material minería de datos grupo 3/PARTE I_Depuracion y Regresiones/Dia1_MD&Depuracion/datosVinoDep.RDS")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Fijar dierectorio de trabajo donde se encuentran funciones y datosvinoDep
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia1_MDDepuracion')
# Cargo las funciones que voy a utilizar después
source("Funciones_R.R")
# Cargo las librerias que me van a hacer falta
library(questionr)
library(corrplot)
library(caret)
library(ggplot2)
library(effectsize)
library(dplyr)
# Arboles de clasificación y regresión CART (Breiman)
paquetes(c('rpart','gridExtra'))
# Parto de los datos sin atípicos ni ausentes guardados
datos<-readRDS("F:/Documentos/Master Comercio 2021-22/Material minería de datos grupo 3 (2)/Material minería de datos grupo 3/PARTE I_Depuracion y Regresiones/Dia1_MD&Depuracion/datosVinoDep.RDS")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Fijar dierectorio de trabajo donde se encuentran funciones y datosvinoDep
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia1_MDDepuracion')
# Cargo las funciones que voy a utilizar después
source("Funciones_R.R")
# Cargo las librerias que me van a hacer falta
library(questionr)
library(corrplot)
library(caret)
library(ggplot2)
library(effectsize)
library(dplyr)
# Arboles de clasificación y regresión CART (Breiman)
paquetes(c('rpart','gridExtra'))
# Parto de los datos sin atípicos ni ausentes guardados
datos<-readRDS("C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia1_MDDepuracion/datosVinoDep.RDS")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Fijar dierectorio de trabajo donde se encuentran funciones y datosvinoDep
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia1_MDDepuracion')
# Cargo las funciones que voy a utilizar después
source("Funciones_R.R")
# Cargo las librerias que me van a hacer falta
library(questionr)
library(corrplot)
library(caret)
library(ggplot2)
library(effectsize)
library(dplyr)
# Arboles de clasificación y regresión CART (Breiman)
paquetes(c('rpart','gridExtra'))
# Parto de los datos sin atípicos ni ausentes guardados
datos<-readRDS("C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia1_MDDepuracion/datosVinoDep.RDS")
varObjCont<-datos$varObjCont
varObjBin<-datos$varObjBin
input<-datos[,-(1:2)]
# Creo la variable aleatoria
input$aleatorio<-runif(nrow(input))
input$aleatorio2<-runif(nrow(input))
#Obtengo la importancia de las variables.
graficoVcramer(input,varObjCont)
#Veo gráficamente el efecto de dos variables cualitativas sobre la binaria
b1<-boxplot_targetbinaria(varObjCont,input$Region,"Region") #esta no influye
b2<-boxplot_targetbinaria(varObjCont,input$Clasificacion,"Clasificacion") #esta sí influye
b3<-boxplot_targetbinaria(varObjCont,input$Etiqueta,"Etiqueta") #esta sí influye
h1<-hist_targetbinaria(varObjCont,input$Region,"Region") #esta no influye
h2<-hist_targetbinaria(varObjCont,input$Clasificacion,"Clasificacion") #esta sí influye
h3<-hist_targetbinaria(varObjCont,input$Etiqueta,"Etiqueta") #esta sí influye
marrangeGrob(list(b1,b2,b3,h1,h2,h3),nrow = 3,ncol = 2)
# Gráfico de correlaciones entre las variables continuas
corrplot(cor(cbind(varObjCont,Filter(is.numeric, input)), use="pairwise", method="pearson"), method = "number",type = "upper")
# Nubes de puntos de variables continuas frente a respuesta continua
psych::scatterHist(input$Acidez,varObjCont)
psych::scatterHist(input$CalifProd_cont,varObjCont)
#Busco las mejores transformaciones para las variables numéricas con respesto a los dos tipos de variables
input_cont<-cbind(input,Transf_Auto(Filter(is.numeric, input),varObjCont))
saveRDS(data.frame(input_cont,varObjCont),"todo_cont_Vino.RDS")
# Gráfico de correlaciones entre las variables continuas (incluidas transformaciones)
corrplot(cor(cbind(varObjCont,Filter(is.numeric, input_cont)), use="pairwise", method="pearson"), method = "ellipse",type = "upper")
# Arbol para tramificar azucar
tree_azucar<-rpart::rpart(varObjCont~Azucar, data = datos, cp=0.005)
tree_azucar
# puntos de corte en 1.61 y 4.46. Tres grupos.
table(tree_azucar$where)
# Los grupos están ya ordenados pero se llaman 3 4 y 5
# Añadimos la variable tramificada al dataset
input$Azucar_tree<-factor(tree_azucar$where)
# Cambiamos los niveles (los ordeno correctamente!!)
levels(input$Azucar_tree) = c('1.62-4.45','<1.62','>4.45')
# Comprobamos
table(input$Azucar_tree)
# Ordenamos niveles
input$Azucar_tree<-factor(input$Azucar_tree, levels = c('<1.62','1.62-4.45','>4.45'))
# Comprobamos
table(input$Azucar_tree)
boxplot_targetbinaria(varObjCont,input$Azucar_tree,"Azucar Tramificada")
## Comienzo con la regresión lineal
todo<-data.frame(input,varObjCont)
#Obtengo la partición
set.seed(123456)
trainIndex <- caret::createDataPartition(todo$varObjCont, p=0.8, list=FALSE)
data_train <- todo[trainIndex,]
data_test <- todo[-trainIndex,]
summary(data_train$varObjCont)
summary(data_test$varObjCont)
#Construyo un modelo preliminar con todas las variables
modelo1<-lm(varObjCont~.- Azucar_tree- CalifProductor-ID ,data=data_train)
summary(modelo1)
Rsq(modelo1,"varObjCont",data_train)
Rsq(modelo1,"varObjCont",data_test)
summary(input)
modelo1_t<-lm(varObjCont~.- Azucar- CalifProductor-ID,data=data_train)
summary(modelo1_t)
Rsq(modelo1_t,"varObjCont",data_train)
Rsq(modelo1_t,"varObjCont",data_test)
# Nos fijamos en la importancia de las variables mediante la cuantifiación de la intensidad del parámetro estimado y su intervalo de confianza
effectsize::effectsize(modelo1_t) %>% arrange(desc(abs(Std_Coefficient)))
modelo2<-lm(varObjCont~Clasificacion+Etiqueta+CalifProd_cont+prop_missings,data=data_train)
summary(modelo2)
Rsq(modelo2,"varObjCont",data_train)
Rsq(modelo2,"varObjCont",data_test)
#Pruebo un modelo con menos variables, basándome en la importancia de las variables
modelo3<-lm(varObjCont~Clasificacion+Etiqueta+CalifProd_cont,data=data_train)
summary(modelo3)
Rsq(modelo3,"varObjCont",data_train)
Rsq(modelo3,"varObjCont",data_test)
#Pruebo un modelo con Azucar tramificada
modelo4<-lm(varObjCont~Clasificacion+Etiqueta+CalifProd_cont+Azucar_tree,data=data_train)
summary(modelo4)
Rsq(modelo4,"varObjCont",data_train)
Rsq(modelo4,"varObjCont",data_test)
#Pruebo un modelo con menos variables, basándome en la importancia de las variables
modelo5<-lm(varObjCont~Clasificacion+Etiqueta+CalifProd_cont+Azucar_tree+Acidez+ Alcohol+CloruroSodico,data=data_train)
summary(modelo5)
Rsq(modelo5,"varObjCont",data_train)
Rsq(modelo5,"varObjCont",data_test)
#Pruebo con una interaccion sobre el anterior
modelo6<-lm(varObjCont~Clasificacion+Etiqueta+CalifProd_cont+Azucar_tree+Acidez+ Alcohol+CloruroSodico+Clasificacion:Etiqueta,data=data_train)
summary(modelo6)
Rsq(modelo6,"varObjCont",data_train)
Rsq(modelo6,"varObjCont",data_test)
# Junto las categorías *** y **** ya que tienen un comportamiento en el mismo sentido
todo$Clasificacion_r<-car::recode(todo$Clasificacion, "c('***','****')='***+'")
# Vuelvo a generar la partición para que los cambios se reflejen en ella
data_train <- todo[trainIndex,]
data_test <- todo[-trainIndex,]
modelo7<-lm(varObjCont~Clasificacion_r+Etiqueta+CalifProd_cont+Azucar_tree+Acidez+ Alcohol+CloruroSodico+Clasificacion_r:Etiqueta,data=data_train)
summary(modelo7)
# eLIMINO LAS CONTINUAS QUE NO PARECÍAN APORTAR MUCHO
modelo8<-lm(varObjCont~Clasificacion_r+Etiqueta+CalifProd_cont+Azucar_tree+Clasificacion_r:Etiqueta,data=data_train)
summary(modelo8)
Rsq(modelo8,"varObjCont",data_train)
Rsq(modelo8,"varObjCont",data_test)
#Hago validación repetida para ver qué modelo es mejor
modelo1VC <- caret::train(formula(modelo1_t),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo2VC <- train(formula(modelo2),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo3VC <- train(formula(modelo3),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo4VC <- train(formula(modelo4),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo5VC <- train(formula(modelo5),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo6VC <- train(formula(modelo6),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo7VC <- train(formula(modelo7),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
modelo8VC <- train(formula(modelo8),
data = todo,method = "lm",
trControl = trainControl(method="repeatedcv", number=5, repeats=20, returnResamp="all")
)
results<-data.frame(rbind(modelo1VC$resample,modelo2VC$resample,modelo3VC$resample,modelo4VC$resample,
modelo5VC$resample,modelo6VC$resample,modelo7VC$resample,modelo8VC$resample),
modelo=c(rep(1,100),rep(2,100),rep(3,100),rep(4,100),
rep(5,100),rep(6,100),rep(7,100),rep(8,100)))
boxplot(Rsquared~modelo,data=results)
aggregate(Rsquared~modelo, data = results, mean) #el 4 tiene mayor R2 medio
aggregate(Rsquared~modelo, data = results, sd) #tb tiene mayor variabilidad
length(coef(modelo1_t));length(coef(modelo2));length(coef(modelo3));length(coef(modelo4))
length(coef(modelo5));length(coef(modelo6));length(coef(modelo7));length(coef(modelo8))
#Evaluamos la estabilidad del modelo a partir de las diferencias en train y test:
Rsq(modelo4,"varObjCont",data_train)
Rsq(modelo4,"varObjCont",data_test)
# Vemos las variables más importantes del modelo ganador
# Nos fijamos en la importancia de las variables mediante la cuantifiación de la intensidad del parámetro estimado y su intervalo de confianza
effectsize::effectsize(modelo1_t) %>% arrange(desc(abs(Std_Coefficient)))
# Clasificación con nivel de referencia *
todo$Clasificacion <- relevel(todo$Clasificacion, ref = "*")
#todo$Etiqueta <- relevel(todo$Etiqueta, ref = "MM")
# Para etiqueta utilizamos volvemos a especificar orden de niveles si es que el cambio que hicimos en el script de depuración no se ha conservado
todo$Etiqueta<-factor(todo$Etiqueta, levels = c('MM','M','R','B','MB'))
modeloFinal<-lm(formula(modelo4),data=todo)
summary(modeloFinal)
# Clasificación con nivel de referencia *
todo$Azucar_tree <- relevel(todo$Azucar_tree, ref = "1.62-4.45")
#todo$Etiqueta <- relevel(todo$Etiqueta, ref = "MM")
modeloFinal2<-lm(formula(modelo4),data=todo)
summary(modeloFinal2)
# Clasificación con nivel de referencia *
todo$Azucar_tree <- car::recode(todo$Azucar_tree, "c('<1.62','>4.45') = '<1.62|>4.45'")
#todo$Etiqueta <- relevel(todo$Etiqueta, ref = "MM")
modeloFinal3<-lm(formula(modelo4),data=todo)
summary(modeloFinal3)
summary(modeloFinal2)
source("C:/Users/Lucie Claire/Desktop/UCM/Modulo 6 - Visualizacion/Tarea/Mapa.R")
mapa_espania %>% addTiles()%>%
addMarkers(lat= michelin_espania$Latitude, lng=michelin_espania$Longitude,
popup= michelin_espania$Name)
setwd("C:/Users/Lucie Claire/Desktop/UCM/Modulo 6 - Visualizacion/Tarea")
if (!"leaflet" %in% installed.packages()) install.packages("leaflet")
library(leaflet)
library(dplyr)
library(tidyr)
str_split_fixed(datos_michelin$Address, ',', 2)
datos_michelin <- read.csv(file = "michelin_my_maps.csv")
datos_michelin <- datos_michelin %>% separate(col = Address, into = c('resto1', 'resto2','resto3','resto4','resto5', 'calle', 'ciudad','CP', 'Pais'),sep = ',', remove = FALSE, fill = 'left')
datos_michelin <- read.csv(file = "michelin_my_maps.csv")
datos_michelin <- datos_michelin %>% separate(col = Address, into = c('resto1', 'resto2','resto3','resto4','resto5', 'calle', 'ciudad','CP', 'Pais'),sep = ',', remove = FALSE, fill = 'left')
michelin_espania <- datos_michelin %>% filter(Pais == " Spain", preserve = TRUE)
Encoding(michelin_espania$Name) <- "UTF-8"
lat_espania <- 40.416775
long_espania <- -3.703790
mapa_espania <- leaflet() %>%
setView(lat = lat_espania,
lng = long_espania,
zoom = 6)
mapa_espania %>% addTiles()%>%
addMarkers(lat= michelin_espania$Latitude, lng=michelin_espania$Longitude,
popup= michelin_espania$Name)
mapa_espania %>% addTiles()%>%
addMarkers(lat= michelin_espania$Latitude, lng=michelin_espania$Longitude,
popup= michelin_espania$Name)
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F) # opciones globales no warnings ni mensajes
library(janitor)
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F) # opciones globales no warnings ni mensajes
library(janitor)
# Directorio de trabajo
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia2_Regresion Lineal/Viviendas')
# Cargo las funciones que voy a utilizar despu?s
source("Funciones_R.R")
# 1) Importa el conjunto de datos y verifica que el tipo de las variables
# se haya asignado correctamente.
# Cargo los datos con la función read_excel() del paquete readxl
# ya que las opciones de reas.xlsx daban fallos de JAva en algunos ordenadores...
datosV <- read_excel("C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/Datos/VentaViviendas.xlsx")
library(readxl)
# 1) Importa el conjunto de datos y verifica que el tipo de las variables
# se haya asignado correctamente.
# Cargo los datos con la función read_excel() del paquete readxl
# ya que las opciones de reas.xlsx daban fallos de JAva en algunos ordenadores...
library(readxl)
datosV <- read_excel("C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/Datos/VentaViviendas.xlsx")
str(datosV) #No todas las categóricas están como factores
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F) # opciones globales no warnings ni mensajes
library(janitor)
# Directorio de trabajo
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia2_Regresion Lineal/Viviendas')
# Cargo las funciones que voy a utilizar despu?s
source("Funciones_R.R")
# 1) Importa el conjunto de datos y verifica que el tipo de las variables
# se haya asignado correctamente.
# Cargo los datos con la función read_excel() del paquete readxl
# ya que las opciones de reas.xlsx daban fallos de JAva en algunos ordenadores...
library(readxl)
datosV <- read_excel("C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/Datos/VentaViviendas.xlsx")
str(datosV) #No todas las categóricas están como factores
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F) # opciones globales no warnings ni mensajes
library(janitor)
# Directorio de trabajo
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia2_Regresion Lineal/Viviendas')
# Cargo las funciones que voy a utilizar despu?s
source("Funciones_R.R")
# Con este código añadimos imágenes controlando bien posicion y tamaño (ahora con eval=F porque ya tenemos el logo en el título)
knitr::include_graphics('nticmaster.png')
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F) # opciones globales no warnings ni mensajes
library(janitor)
# Directorio de trabajo
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/PARTE I_Depuracion y Regresiones/Dia2_Regresion Lineal/Viviendas')
# Cargo las funciones que voy a utilizar despu?s
source("Funciones_R.R")
# Directorio de trabajo
setwd('C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520')
# Cargo las funciones que voy a utilizar despu?s
source("Funciones_R.R")
# Cargo las librerias que me van a hacer falta. Urilizo la función
# paquetes (instala automáticamente el paquete en caso de necesidad)
paquetes(c('questionr','psych','car','corrplot','readxl','ggplot2','gridExtra','dplyr'))
# 1) Importa el conjunto de datos y verifica que el tipo de las variables
# se haya asignado correctamente.
# Cargo los datos con la función read_excel() del paquete readxl
# ya que las opciones de reas.xlsx daban fallos de JAva en algunos ordenadores...
library(readxl)
datosV <- read_excel("C:/Users/Lucie Claire/Desktop/UCM/Modulo 8 - Mineria de datos/Documentación minería de datos y modelización predictiva  - Guillermo Villarino-20220520/Datos/VentaViviendas.xlsx")
str(datosV) #No todas las categóricas están como factores
shiny::runApp()
runApp()
